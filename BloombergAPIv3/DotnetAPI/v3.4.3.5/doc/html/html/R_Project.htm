<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp"><head><title>Namespaces</title><link rel="stylesheet" type="text/css" href="../styles/presentation.css" /><link rel="stylesheet" type="text/css" href="ms-help://Hx/HxRuntime/HxLink.css" /><script type="text/javascript" src="../scripts/script_prototype.js"> </script><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/StyleUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/ElementCollection.js"> </script><script type="text/javascript" src="../scripts/MemberFilter.js"> </script><script type="text/javascript" src="../scripts/CollapsibleSection.js"> </script><script type="text/javascript" src="../scripts/LanguageFilter.js"> </script><script type="text/javascript" src="../scripts/CookieDataStore.js"> </script><meta name="file" content="R_Project" /><xml xmlns:msxsl="urn:schemas-microsoft-com:xslt"><MSHelp:Attr Name="AssetID" Value="R:Project" /><MSHelp:Keyword Index="A" Term="R:Project" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="Locale" Value="en-us" /></xml></head><body><div id="control"><span class="productTitle">Bloomberg API for .NET</span><br /><span class="topicTitle">Namespaces</span><br /><div id="toolbar"><span id="chickenFeet"><span class="selflink">Namespaces</span></span><span id="languageFilter"><select id="languageSelector" onchange="var names = this.value.split(' '); toggleVisibleLanguage(names[1]); lfc.switchLanguage(names[0]); store.set('lang',this.value); store.save();"><option value="CSharp cs">C#</option><option value="VisualBasic vb">Visual Basic</option><option value="ManagedCPlusPlus cpp">Visual C++</option></select></span></div></div><div id="main"><span style="color: DarkGray"></span><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Namespaces</div><div class="sectionContent"><table class="members" id="memberList"><tr><th class="nameColumn">Namespace</th><th class="descriptionColumn">Description</th></tr><tr><td><b><a href="N_Bloomberglp_Blpapi.htm">Bloomberglp.Blpapi</a></b></td><td><div class="summary">The Bloomberg API provides developers with 24x7 programmatic access to data from the Bloomberg Data Center for use in customer applications.

The Bloomberg API lets you integrate streaming real-time and delayed data, reference data, historical data, intraday data, and Bloomberg derived data into custom and thirdparty applications. You can choose which data you require down to the individual field level.

The Bloomberg API supports run-time downloadable schemas for the services it provides and provides methods to query these schemas at runtime. This means the Bloomberg API can support additional services without additions to the interface. It also makes writing applications that can adapt to changes in services or entirely new services simple.

The Bloomberg API object model contains a small number of key objects which applications use to request, receive and interpret data.

An application creates a Session object to manage its connection with the Bloomberg infrastructure. (Some applications may choose to create multiple Session objects for
redundancy).

Using the Session object, an application creates a Service object and then "opens' each Bloomberg service that it will use. For example, Bloomberg provides streaming market data and reference data as services.

There are two programming paradigms that can be used with the Service object. The client can make individual requests (via a Request object) for data or the client can start a
subscription (managed via a Subscription object) with the service for ongoing data updates. Depending on the services being used, a customer application may be written to
handle both paradigms. Whichever paradigm or paradigms are used, the Bloomberg infrastructure replies with events (received at the client as Event objects) which the client
must handle asynchronously.

Programmatically, the customer application obtains Event objects for the Session and then extracts from those Event objects one or more Message objects containing the Bloomberg data.</div><br /></td></tr></table></div></div><div id="footer"><p />© BLOOMBERG L.P. MAKES NO WARRANTY, EXPRESS OR IMPLIED, AS TO RESULTS TO BE ATTAINED FROM THE USE OF THE SERVICES, FUNCTIONALITIES, OR DATA FROM AND OF THE BLOOMBERG API, OR EQUIPMENT BY WHICH THE SERVICES OR FUNCTIONS ARE PROVIDED, AND THERE ARE NO EXPRESS OR IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE OR USE.</div></div></body></html>